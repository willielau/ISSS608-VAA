[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages have been installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)\n\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#bar-chart",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#bar-chart",
    "title": "Hands-on Exercise 1",
    "section": "Bar Chart",
    "text": "Bar Chart\n\nggplot(data = exam_data,\n       aes(x = RACE)) +\n  geom_bar()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#dotplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#dotplot",
    "title": "Hands-on Exercise 1",
    "section": "Dotplot",
    "text": "Dotplot\n\nggplot(data = exam_data,\n       aes(x = MATHS)) +\n  geom_dotplot(binwidth = 2.5,\n               dotsize = 0.5) +\n  scale_y_continuous(NULL, \n                     breaks = NULL)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#histogram",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#histogram",
    "title": "Hands-on Exercise 1",
    "section": "Histogram",
    "text": "Histogram\n\nggplot(data = exam_data,\n       aes(x = MATHS)) +\n  geom_histogram(bins = 20,\n                 color = \"black\",\n                 fill = \"pink\")\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS,\n           fill = GENDER)) +\n  geom_histogram(bins = 20,\n                 color = \"black\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#kernel-density-estimate",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#kernel-density-estimate",
    "title": "Hands-on Exercise 1",
    "section": "Kernel Density Estimate",
    "text": "Kernel Density Estimate\n\nggplot(data = exam_data,\n       aes(x = MATHS)) +\n  geom_density()\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS, \n           colour = GENDER)) +\n  geom_density()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#boxplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#boxplot",
    "title": "Hands-on Exercise 1",
    "section": "Boxplot",
    "text": "Boxplot\n\nggplot(data = exam_data,\n       aes(y = MATHS, \n           x = GENDER)) +\n  geom_boxplot()\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, \n           x = GENDER)) +\n  geom_boxplot(notch = TRUE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#boxplot-point",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#boxplot-point",
    "title": "Hands-on Exercise 1",
    "section": "Boxplot + Point",
    "text": "Boxplot + Point\n\nggplot(data = exam_data,\n       aes(y = MATHS, \n           x = GENDER)) +\n  geom_boxplot() +\n  geom_point(position = \"jitter\",\n             size = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#violin",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#violin",
    "title": "Hands-on Exercise 1",
    "section": "Violin",
    "text": "Violin\n\nggplot(data = exam_data,\n       aes(y = MATHS, \n           x = GENDER)) +\n  geom_violin()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#violin-boxplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#violin-boxplot",
    "title": "Hands-on Exercise 1",
    "section": "Violin + Boxplot",
    "text": "Violin + Boxplot\n\nggplot(data = exam_data,\n       aes(y = MATHS, \n           x = GENDER)) +\n  geom_violin(fill = \"light yellow\") +\n  geom_boxplot(alpha = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#scatter-plot-point",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#scatter-plot-point",
    "title": "Hands-on Exercise 1",
    "section": "Scatter Plot (Point)",
    "text": "Scatter Plot (Point)\n\nggplot(data = exam_data,\n       aes(y = MATHS, \n           x = ENGLISH)) +\n  geom_point()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#best-fit-curve",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#best-fit-curve",
    "title": "Hands-on Exercise 1",
    "section": "Best Fit Curve",
    "text": "Best Fit Curve\n\nggplot(data = exam_data,\n       aes(y = MATHS, \n           x = ENGLISH)) +\n  geom_point() +\n  geom_smooth(size = 0.5)\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#best-fit-line",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#best-fit-line",
    "title": "Hands-on Exercise 1",
    "section": "Best Fit Line",
    "text": "Best Fit Line\n\nggplot(data = exam_data,\n       aes(y = MATHS, \n           x = ENGLISH)) +\n  geom_point() +\n  geom_smooth(method = lm, size = 0.5)\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#trellis-plot-facet",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#trellis-plot-facet",
    "title": "Hands-on Exercise 1",
    "section": "Trellis Plot (Facet)",
    "text": "Trellis Plot (Facet)\n\nggplot(data = exam_data, \n       aes(x = MATHS)) +\n  geom_histogram(bins = 20) +\n    facet_wrap(~ CLASS)\n\n\n\n\n\nggplot(data = exam_data, \n       aes(x = MATHS)) +\n  geom_histogram(bins = 20) +\n    facet_grid(~ CLASS)\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS,\n           x = CLASS)) +\n  geom_boxplot() +\n  facet_grid(~ GENDER)\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS,\n           x = CLASS)) +\n  geom_boxplot() +\n  facet_grid(GENDER ~.)\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS,\n           x = GENDER)) +\n  geom_boxplot() +\n  facet_grid(GENDER ~ CLASS)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-coordinates",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-coordinates",
    "title": "Hands-on Exercise 1",
    "section": "Working with Coordinates",
    "text": "Working with Coordinates\n\nggplot(data = exam_data, \n       aes(x = RACE)) +\n  geom_bar() +\n  coord_flip()\n\n\n\n\nAligning x-axis and y-axis ranges:\n\nggplot(data = exam_data,\n       aes(x = MATHS, y = ENGLISH)) +\n  geom_point() +\n  geom_smooth(method = lm,\n              size = 0.5) +\n  coord_cartesian(xlim = c(0,100),\n                  ylim = c(0,100))\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-themes",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-themes",
    "title": "Hands-on Exercise 1",
    "section": "Working with Themes",
    "text": "Working with Themes\nA list of themes can be found at this link\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_gray()\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_classic()\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_minimal()\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_gray() +\n  theme(panel.background = element_rect(\n    fill = \"light blue\",\n    colour = \"light blue\",\n    linewidth = 0.5,\n    linetype = \"solid\"),\n    panel.grid.major = element_line(\n      linewidth = 0.5,\n      linetype = \"solid\",\n      colour = \"white\"),\n    panel.grid.minor = element_line(\n      linewidth = 0.25,\n      linetype = \"solid\",\n      colour = \"white\"))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#makeover-1",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#makeover-1",
    "title": "Hands-on Exercise 1",
    "section": "Makeover 1",
    "text": "Makeover 1\n\n\n\n\n\nIssues with the bar chart:\n\ny-axis (count) is not clear\nthe bars should be sorted by frequency\nfrequency values should be indicated for clarity\n\n\nggplot(data=exam_data,\n       aes(x=reorder(RACE,RACE,\n                function(x)-length(x))))+\n  geom_bar() +\n  ylim(0,220) +\n  geom_text(stat=\"count\", \n      aes(label=paste0(after_stat(count), \", \", \n      round(after_stat(count)/sum(after_stat(count))*100,\n            1), \"%\")),\n      vjust=-1) +\n  xlab(\"Race\") +\n  ylab(\"No. of\\nPupils\") +\n  theme(axis.title.y=element_text(angle = 0))\n\n\n\n\n\nexam_data %>%\n  mutate(RACE = fct_infreq(RACE)) %>%\n  ggplot(aes(x = RACE)) + \n  geom_bar()+\n  ylim(0,220) +\n  geom_text(stat=\"count\", \n      aes(label=paste0(after_stat(count), \", \", \n      round(after_stat(count)/sum(after_stat(count))*100,\n            1), \"%\")),\n      vjust=-1) +\n  xlab(\"Race\") +\n  ylab(\"No. of\\nPupils\") +\n  theme(axis.title.y=element_text(angle = 0))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#makeover-2",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#makeover-2",
    "title": "Hands-on Exercise 1",
    "section": "Makeover 2",
    "text": "Makeover 2\n\n\n\n\n\nIssues with the histogram:\n\nbins are not clear\nadd mean and median lines\n\n\nggplot(data = exam_data,\n       aes(x = MATHS)) +\n  geom_histogram(bins = 20,\n                 colour = \"black\",\n                 fill = \"light yellow\") +\n  geom_vline(aes(xintercept = mean(MATHS, na.rm = T)),\n             colour = \"red\",\n             linetype = \"dashed\",\n             size = 1) +\n  geom_vline(aes(xintercept = median(MATHS, na.rm = T)),\n             colour = \"purple\",\n             linetype = \"dashed\",\n             size = 1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#makeover-3",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#makeover-3",
    "title": "Hands-on Exercise 1",
    "section": "Makeover 3",
    "text": "Makeover 3\nCreating a background histogram for total distribution within a facet wrap for two categories\n\nd <- exam_data   \nd_bg <- d[, -3]  \n\nggplot(d, aes(x = ENGLISH, fill = GENDER)) +\n  geom_histogram(data = d_bg, bins = 20, fill = \"grey\", alpha = .5) +\n  geom_histogram(bins =20, colour = \"black\") +\n  facet_wrap(~ GENDER) +\n  guides(fill = \"none\") +  \n  theme_bw()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#makeover-4",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#makeover-4",
    "title": "Hands-on Exercise 1",
    "section": "Makeover 4",
    "text": "Makeover 4\nCreate intercept grids and aligning x-axis and y-axis for a scatterplot\n\nggplot(data=exam_data, \n       aes(x=MATHS, y=ENGLISH)) +\n  geom_point() +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  geom_hline(yintercept=50,\n             linetype=\"dashed\",\n             color=\"grey60\",\n             size=1) + \n  geom_vline(xintercept=50, \n             linetype=\"dashed\",\n             color=\"grey60\",\n             size=1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "test"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03.html",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03.html",
    "title": "In-class Exercise 3",
    "section": "",
    "text": "Installing and loading R packages\n\npacman::p_load(ggiraph, tidyverse)\n\nImporting data\n\nexam_data <- read.csv(\"data/Exam_data.csv\")\n\n\nggplot(data=exam_data,\n       aes(x = MATHS)) +\n  geom_dotplot(dotsize = 0.5)\n\n\n\n\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "title": "Hands-on_Ex05",
    "section": "",
    "text": "pacman::p_load(corrplot, ggstatsplot, tidyverse)\nwine <- read_csv(\"data/wine_quality.csv\")\n\nRows: 6497 Columns: 13\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): type\ndbl (12): fixed acidity, volatile acidity, citric acid, residual sugar, chlo...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n# to use specific package's function if there is same name from other packages\n# dplyr::select()\n\n\npairs(wine[,1:11])\n\n\n\n\n\nggstatsplot::ggcorrmat(\n  data = wine, \n  cor.vars = 1:11)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608 Visual Analytics & Applications",
    "section": "",
    "text": "Welcome to my website for ISSS608 Visual Analytics & Applications (Jan 2023 term). This is part of my coursework for the Masters of IT in Business (Analytics Track) at Singapore Management University."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "Between January 2020 to June 2022, there were 73,247 real estate transactions in Singapore across all property types. It would be interesting to explore population demographics of the top 9 planning areas by volume of real estate transactions.\nThe population demographic data used is “Singapore Residents by Planning Area / Subzone, Age Group, Sex and Type of Dwelling, June 2022” from the Department of Statistics, Singapore.\nThe age-sex pyramid in a trellis display is used to show the demographic structure by gender and age group for each of these top 9 planning areas.\n\nSource: REALIS, URA Singapore"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#age-sex-pyramid-visualization",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#age-sex-pyramid-visualization",
    "title": "Take-home Exercise 1",
    "section": "2. Age-Sex Pyramid Visualization",
    "text": "2. Age-Sex Pyramid Visualization\nThe proposed age-sex pyramid in a trellis display visualization for the 9 planning areas by gender and age group is available for viewing on Tableau Public.\n\n\n2.1 Negative Population Growth Rate\nThe age-sex pyramid of all 9 planning areas point towards a negative population growth rate where the large age groups the middle outstrip the younger ones. The adults in these middle age groups will soon become seniors with higher dependency on younger family members for living cost burdens even as general living costs are on the rise. This is consistent with the general discourse on Singapore’s aging population problem where the state is also concerned that the burden extends to state funding as well. More resources and facilities in areas such as health care will need to be provided by the government to support the rising number of seniors.\nThis negative growth rate is to a certain extent less prevalent in planning areas such as Bukit Timah, Clementi, and Queenstown where housing prices tend to be higher than the others. This is quite surprising as these are some of the most mature estates in Singapore and would have expected to see a more distinct inverted triangle shape. One possible explanation is that since these areas are home to more affluent families, especially in Bukit Timah, they have the financial muscle to have more children with less concerns about the cost of doing so.\n\n\n2.2 Other Interesting Stray Observations\n\nA hypothesis can be made that females live longer than males as there seems to be more females in the higher age groups in every planning area. This trend starts around the 80-84 age group and becomes most distinct in the 90+ group.\nBelow the 80-84 age group, the ratio of males to females appear to be quite equally split. Furthermore, the largest age groups also appear to be fairly consistent between the number of males and females\nBukit Timah has the smallest total population size but interestingly topped the list at 5,390 transactions between January 2021 and June 2022.\nPasir Ris land area is comparable to Sengkang and Hougang but much less densely populated."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#step-by-step-guide",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#step-by-step-guide",
    "title": "Take-home Exercise 1",
    "section": "3. Step-by-Step Guide",
    "text": "3. Step-by-Step Guide\n\n3.1 Data Cleaning with Tableau Prep Builder\n\n\n\n\n\n\n\n\n3.1.1\nLoad the csv file\n\n\n\n3.1.2\nRename column headers into more recognizable names\n\n\n\n3.1.3\nModify “Age Group” so that it can be sorted in descending order\n\n\n\n3.1.4\nOutput clean data as .hyper data extract for use in Tableau Desktop\n\n\n\n\n\n\n3.2 Data Visualization with Tableau Desktop\n\n\n\n\n\n\n\n\n3.2.1\nCreate calculated field for male and female population\n\n\n\n3.2.2\nAdd “Planning Area”, “Male Population”, “Female Population” to columns\nAdd “Age Group” to rows\nAdd “Sex” to Colour and select desired colour\n\n\n\n3.2.3\nFilter the 9 selected planning areas\n\n\n\n3.2.4\nReverse y-axis to get descending order for age group, reverse x-axis for male population to get the pyramid shape and standardize the range to ensure bar lengths are comparable\n\n\n\n3.2.5\nMake cosmetic changes to headers, axis, text, legend, etc. for cleaner and better look. Prepare dashboard for publishing to Tableau Public."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "title": "Take-home Exercise 2",
    "section": "",
    "text": "This Take-home Exercise 2 is a critique of a classmate’s Take-home Exercise 1 in terms of clarity and aesthetics.\nThe task for Take-home Exercise 1 is to produce age-sex pyramids in a trellis display to reveal the age group and gender demographic structures of 9 planning areas in Singapore using the “Singapore Residents by Planning Area, Subzone, Age Group, Sex, and Type of Dwelling, June 2022” dataset from the Department of Statistics, Singapore.\nThe original design was created using Tableau but will now be redone in R Studio, using data visualization principles and best practices learnt so far in the course."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#critique-of-original-design",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#critique-of-original-design",
    "title": "Take-home Exercise 2",
    "section": "2. Critique of Original Design",
    "text": "2. Critique of Original Design\n\n2.1 Original Design\n\n\n\n2.2 Clarity\nX-Axis Range\nWhen comparing across visual charts, especially ones like age-sex pyramids, people take first impressions base on sweeping visual cues such as comparing the shapes of the pyramid, length of the bars, etc. without looking too much into the details. When the x-axis range is inconsistent like in this case, it will immediately give the wrong interpretations. For example, Ang Mo Kio and Jurong West appears to be similarly shaped and one would interpret that they largely have the same population size. However this is a false interpretation because Ang Mo Kio’s x-axis is scaled to 6,000 while Jurong West is scaled to 10,000.\nThe x-axis is not just inconsistent between the different planning areas but also different within some of the same planning area. For example, Novena has inconsistent range values and also intervals.\nY-Axis Label\nWhile it is quite intuitive to guess that the numbers on the y-axis represents ages since this is called an age-sex pyramid, it would still be good to label it.\nChoice of Planning Area\nThe task required choosing 9 planning areas to visualize but there does not seem to be any rationale or logic for the choices made here.\n\n\n2.3 Aesthetics\nDuplicate Displays\nIt is quite confusing to have duplicate displays of the age-sex pyramids - one in a single row and the other in a 3x3 grid - as people will assume there is a difference. The purpose of this is unclear but it appears from the chart titles (which are also confusing) that the 3x3 grid is supposed to be more detailed than the single row. However it does not really show more detail so since they are exactly the same except they are more spaced out. The single row display is unnecessary.\nThe one positive of the single row display is that at least the x-axis ranges appear to be consistent across all the pyramids."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#new-design",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#new-design",
    "title": "Take-home Exercise 2",
    "section": "3. New Design",
    "text": "3. New Design\n\n3.1 Data Preparation\nInstalling (if required) and launching necessary R packages:\n\npackages = c('tidyverse')\n\nfor(p in packages){\n  if(!require(p, character.only = T)){\n    install.packages(p)\n  }\n  library(p, character.only = T)\n}\n\nLoading the data:\n\npopdata <- read_csv(\"data/respopagesextod2022.csv\")\n\nRemoving null values:\n\npopdata <- na.omit(popdata)\n\nReformatting Age Group:\n\nagegrp = c(\"0_to_4\", \"5_to_9\", \"10_to_14\", \"15_to_19\", \n           \"20_to_24\", \"25_to_29\", \"30_to_34\", \"35_to_39\", \n           \"40_to_44\", \"45_to_49\", \"50_to_54\", \"55_to_59\",\n           \"60_to_64\", \"65_to_69\", \"70_to_74\", \"75_to_79\", \n           \"80_to_84\", \"85_to_89\", \"90_and_over\")\n\nfor (a in agegrp){\n  popdata$AG[popdata$AG == a] <- c(\"0-04\", \"05-09\", \"10-14\", \"15-19\",\n                             \"20-24\", \"25-29\", \"30-34\", \"35-39\",\n                             \"40-44\", \"45-49\", \"50-54\", \"55-59\",\n                             \"60-64\", \"65-69\", \"70-74\", \"75-79\",\n                             \"80-84\", \"85-89\", \"90+\")\n  }\n\nChoosing the Top 9 Planning Areas by total size:\n\ntop9 <- popdata %>%\n  group_by(PA) %>%\n  summarise_at(vars(Pop), sum) %>%\n  arrange(desc(Pop))\n\ntop9 <- (top9[1:9,1])\n\ntop9\n\n# A tibble: 9 × 1\n  PA           \n  <chr>        \n1 Bedok        \n2 Tampines     \n3 Jurong West  \n4 Sengkang     \n5 Woodlands    \n6 Hougang      \n7 Yishun       \n8 Choa Chu Kang\n9 Punggol      \n\n\n\nfor (x in top9){\n  top9data <- subset(popdata, PA == x)}\n\nCreating the male and female population dataframes from the Top 9 Planning Areas:\n\nMtop9data <- filter(top9data, Sex == 'Males')\nFtop9data <- filter(top9data, Sex == 'Females') %>% \n  mutate(Pop = Pop*-1)\n\n\n\n3.2 Final Design\n\nggplot() +\n  geom_bar(Mtop9data, mapping = aes(x = AG, y = sum(Pop), fill = Sex), width = 0.8, stat = \"identity\") +\n  geom_bar(Ftop9data, mapping = aes(x = AG, y = sum(Pop), fill = Sex), width = 0.8, stat = \"identity\") +\n  coord_flip() +\n  facet_wrap (~ PA) + \n  ylab(\"Population\") +\n  xlab(\"Age Group\") +\n  theme(axis.text.y=element_text(size=rel(0.4))) +\n  ggtitle(\"Age-Sex Pyramid of Top 9 Planning Areas by Population, SG June 2022\")\n\n\n\n\nThere is unfortunately some error with the values for population count in the final design resulting in an age-sex pyramid that is clearly wrong. However, I cannot figure out where is the problem.\nLeaving aside the errors, this visualization provides greater clarity and aesthetics as compared to the original design."
  }
]