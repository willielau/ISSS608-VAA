[
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "title": "Take-home Exercise 2",
    "section": "",
    "text": "This Take-home Exercise 2 is a critique of a classmate’s Take-home Exercise 1 in terms of clarity and aesthetics.\nThe task for Take-home Exercise 1 is to produce age-sex pyramids in a trellis display to reveal the age group and gender demographic structures of 9 planning areas in Singapore using the “Singapore Residents by Planning Area, Subzone, Age Group, Sex, and Type of Dwelling, June 2022” dataset from the Department of Statistics, Singapore.\nThe original design was created using Tableau but will now be redone in R Studio, using data visualization principles and best practices learnt so far in the course."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#critique-of-original-design",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#critique-of-original-design",
    "title": "Take-home Exercise 2",
    "section": "2. Critique of Original Design",
    "text": "2. Critique of Original Design\n\n2.1 Original Design\n\n\n\n2.2 Clarity\nX-Axis Range\nWhen comparing across visual charts, especially ones like age-sex pyramids, people take first impressions base on sweeping visual cues such as comparing the shapes of the pyramid, length of the bars, etc. without looking too much into the details. When the x-axis range is inconsistent like in this case, it will immediately give the wrong interpretations. For example, Ang Mo Kio and Jurong West appears to be similarly shaped and one would interpret that they largely have the same population size. However this is a false interpretation because Ang Mo Kio’s x-axis is scaled to 6,000 while Jurong West is scaled to 10,000.\nThe x-axis is not just inconsistent between the different planning areas but also different within some of the same planning area. For example, Novena has inconsistent range values and also intervals.\nY-Axis Label\nWhile it is quite intuitive to guess that the numbers on the y-axis represents ages since this is called an age-sex pyramid, it would still be good to label it.\n\n\n2.3 Aesthetics\nDuplicate Displays\nIt is quite confusing to have duplicate displays of the age-sex pyramids - one in a single row and the other in a 3x3 grid - as people will assume there is a difference. The purpose of this is unclear but it appears from the chart titles (which are also confusing) that the 3x3 grid is supposed to be more detailed than the single row. However it does not really show more detail so since they are exactly the same except they are more spaced out. The single row display is unnecessary.\nThe one positive of the single row display is that at least the x-axis ranges appear to be consistent across all the pyramids."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#new-design",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#new-design",
    "title": "Take-home Exercise 2",
    "section": "3. New Design",
    "text": "3. New Design\n\n3.1 Data Preparation\nInstalling (if required) and launching necessary R packages:\n\npackages = c(\"tidyverse\", \"knitr\", \"patchwork\")\nfor(p in packages){\n  if(!require(p, character.only = T)){\n    install.packages(p)\n    }\n  library(p, character.only = T)\n  }\n\nLoading the data:\n\ndata <- read_csv(\"data/respopagesextod2022.csv\")\n\nReformatting Age Group:\n\nagegrp = c(\"0_to_4\", \"5_to_9\", \"10_to_14\", \"15_to_19\", \n           \"20_to_24\", \"25_to_29\", \"30_to_34\", \"35_to_39\", \n           \"40_to_44\", \"45_to_49\", \"50_to_54\", \"55_to_59\",\n           \"60_to_64\", \"65_to_69\", \"70_to_74\", \"75_to_79\", \n           \"80_to_84\", \"85_to_89\", \"90_and_over\")\n\nfor (a in agegrp){\n  data$AG[data$AG == a] <- c(\"0-04\", \"05-09\", \"10-14\", \"15-19\",\n                             \"20-24\", \"25-29\", \"30-34\", \"35-39\",\n                             \"40-44\", \"45-49\", \"50-54\", \"55-59\",\n                             \"60-64\", \"65-69\", \"70-74\", \"75-79\",\n                             \"80-84\", \"85-89\", \"90+\")\n  }\n\n\n\n3.2 Final Design\nxx"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages have been installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)\n\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#bar-chart",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#bar-chart",
    "title": "Hands-on Exercise 1",
    "section": "Bar Chart",
    "text": "Bar Chart\n\nggplot(data = exam_data,\n       aes(x = RACE)) +\n  geom_bar()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#dotplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#dotplot",
    "title": "Hands-on Exercise 1",
    "section": "Dotplot",
    "text": "Dotplot\n\nggplot(data = exam_data,\n       aes(x = MATHS)) +\n  geom_dotplot(binwidth = 2.5,\n               dotsize = 0.5) +\n  scale_y_continuous(NULL, \n                     breaks = NULL)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#histogram",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#histogram",
    "title": "Hands-on Exercise 1",
    "section": "Histogram",
    "text": "Histogram\n\nggplot(data = exam_data,\n       aes(x = MATHS)) +\n  geom_histogram(bins = 20,\n                 color = \"black\",\n                 fill = \"pink\")\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS,\n           fill = GENDER)) +\n  geom_histogram(bins = 20,\n                 color = \"black\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#kernel-density-estimate",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#kernel-density-estimate",
    "title": "Hands-on Exercise 1",
    "section": "Kernel Density Estimate",
    "text": "Kernel Density Estimate\n\nggplot(data = exam_data,\n       aes(x = MATHS)) +\n  geom_density()\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS, \n           colour = GENDER)) +\n  geom_density()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#boxplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#boxplot",
    "title": "Hands-on Exercise 1",
    "section": "Boxplot",
    "text": "Boxplot\n\nggplot(data = exam_data,\n       aes(y = MATHS, \n           x = GENDER)) +\n  geom_boxplot()\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, \n           x = GENDER)) +\n  geom_boxplot(notch = TRUE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#boxplot-point",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#boxplot-point",
    "title": "Hands-on Exercise 1",
    "section": "Boxplot + Point",
    "text": "Boxplot + Point\n\nggplot(data = exam_data,\n       aes(y = MATHS, \n           x = GENDER)) +\n  geom_boxplot() +\n  geom_point(position = \"jitter\",\n             size = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#violin",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#violin",
    "title": "Hands-on Exercise 1",
    "section": "Violin",
    "text": "Violin\n\nggplot(data = exam_data,\n       aes(y = MATHS, \n           x = GENDER)) +\n  geom_violin()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#violin-boxplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#violin-boxplot",
    "title": "Hands-on Exercise 1",
    "section": "Violin + Boxplot",
    "text": "Violin + Boxplot\n\nggplot(data = exam_data,\n       aes(y = MATHS, \n           x = GENDER)) +\n  geom_violin(fill = \"light yellow\") +\n  geom_boxplot(alpha = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#scatter-plot-point",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#scatter-plot-point",
    "title": "Hands-on Exercise 1",
    "section": "Scatter Plot (Point)",
    "text": "Scatter Plot (Point)\n\nggplot(data = exam_data,\n       aes(y = MATHS, \n           x = ENGLISH)) +\n  geom_point()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#best-fit-curve",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#best-fit-curve",
    "title": "Hands-on Exercise 1",
    "section": "Best Fit Curve",
    "text": "Best Fit Curve\n\nggplot(data = exam_data,\n       aes(y = MATHS, \n           x = ENGLISH)) +\n  geom_point() +\n  geom_smooth(size = 0.5)\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#best-fit-line",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#best-fit-line",
    "title": "Hands-on Exercise 1",
    "section": "Best Fit Line",
    "text": "Best Fit Line\n\nggplot(data = exam_data,\n       aes(y = MATHS, \n           x = ENGLISH)) +\n  geom_point() +\n  geom_smooth(method = lm, size = 0.5)\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#trellis-plot-facet",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#trellis-plot-facet",
    "title": "Hands-on Exercise 1",
    "section": "Trellis Plot (Facet)",
    "text": "Trellis Plot (Facet)\n\nggplot(data = exam_data, \n       aes(x = MATHS)) +\n  geom_histogram(bins = 20) +\n    facet_wrap(~ CLASS)\n\n\n\n\n\nggplot(data = exam_data, \n       aes(x = MATHS)) +\n  geom_histogram(bins = 20) +\n    facet_grid(~ CLASS)\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS,\n           x = CLASS)) +\n  geom_boxplot() +\n  facet_grid(~ GENDER)\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS,\n           x = CLASS)) +\n  geom_boxplot() +\n  facet_grid(GENDER ~.)\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS,\n           x = GENDER)) +\n  geom_boxplot() +\n  facet_grid(GENDER ~ CLASS)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-coordinates",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-coordinates",
    "title": "Hands-on Exercise 1",
    "section": "Working with Coordinates",
    "text": "Working with Coordinates\n\nggplot(data = exam_data, \n       aes(x = RACE)) +\n  geom_bar() +\n  coord_flip()\n\n\n\n\nAligning x-axis and y-axis ranges:\n\nggplot(data = exam_data,\n       aes(x = MATHS, y = ENGLISH)) +\n  geom_point() +\n  geom_smooth(method = lm,\n              size = 0.5) +\n  coord_cartesian(xlim = c(0,100),\n                  ylim = c(0,100))\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-themes",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-themes",
    "title": "Hands-on Exercise 1",
    "section": "Working with Themes",
    "text": "Working with Themes\nA list of themes can be found at this link\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_gray()\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_classic()\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_minimal()\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_gray() +\n  theme(panel.background = element_rect(\n    fill = \"light blue\",\n    colour = \"light blue\",\n    linewidth = 0.5,\n    linetype = \"solid\"),\n    panel.grid.major = element_line(\n      linewidth = 0.5,\n      linetype = \"solid\",\n      colour = \"white\"),\n    panel.grid.minor = element_line(\n      linewidth = 0.25,\n      linetype = \"solid\",\n      colour = \"white\"))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#makeover-1",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#makeover-1",
    "title": "Hands-on Exercise 1",
    "section": "Makeover 1",
    "text": "Makeover 1\n\n\n\n\n\nIssues with the bar chart:\n\ny-axis (count) is not clear\nthe bars should be sorted by frequency\nfrequency values should be indicated for clarity\n\n\nggplot(data=exam_data,\n       aes(x=reorder(RACE,RACE,\n                function(x)-length(x))))+\n  geom_bar() +\n  ylim(0,220) +\n  geom_text(stat=\"count\", \n      aes(label=paste0(after_stat(count), \", \", \n      round(after_stat(count)/sum(after_stat(count))*100,\n            1), \"%\")),\n      vjust=-1) +\n  xlab(\"Race\") +\n  ylab(\"No. of\\nPupils\") +\n  theme(axis.title.y=element_text(angle = 0))\n\n\n\n\n\nexam_data %>%\n  mutate(RACE = fct_infreq(RACE)) %>%\n  ggplot(aes(x = RACE)) + \n  geom_bar()+\n  ylim(0,220) +\n  geom_text(stat=\"count\", \n      aes(label=paste0(after_stat(count), \", \", \n      round(after_stat(count)/sum(after_stat(count))*100,\n            1), \"%\")),\n      vjust=-1) +\n  xlab(\"Race\") +\n  ylab(\"No. of\\nPupils\") +\n  theme(axis.title.y=element_text(angle = 0))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#makeover-2",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#makeover-2",
    "title": "Hands-on Exercise 1",
    "section": "Makeover 2",
    "text": "Makeover 2\n\n\n\n\n\nIssues with the histogram:\n\nbins are not clear\nadd mean and median lines\n\n\nggplot(data = exam_data,\n       aes(x = MATHS)) +\n  geom_histogram(bins = 20,\n                 colour = \"black\",\n                 fill = \"light yellow\") +\n  geom_vline(aes(xintercept = mean(MATHS, na.rm = T)),\n             colour = \"red\",\n             linetype = \"dashed\",\n             size = 1) +\n  geom_vline(aes(xintercept = median(MATHS, na.rm = T)),\n             colour = \"purple\",\n             linetype = \"dashed\",\n             size = 1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#makeover-3",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#makeover-3",
    "title": "Hands-on Exercise 1",
    "section": "Makeover 3",
    "text": "Makeover 3\nCreating a background histogram for total distribution within a facet wrap for two categories\n\nd <- exam_data   \nd_bg <- d[, -3]  \n\nggplot(d, aes(x = ENGLISH, fill = GENDER)) +\n  geom_histogram(data = d_bg, bins = 20, fill = \"grey\", alpha = .5) +\n  geom_histogram(bins =20, colour = \"black\") +\n  facet_wrap(~ GENDER) +\n  guides(fill = \"none\") +  \n  theme_bw()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#makeover-4",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#makeover-4",
    "title": "Hands-on Exercise 1",
    "section": "Makeover 4",
    "text": "Makeover 4\nCreate intercept grids and aligning x-axis and y-axis for a scatterplot\n\nggplot(data=exam_data, \n       aes(x=MATHS, y=ENGLISH)) +\n  geom_point() +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  geom_hline(yintercept=50,\n             linetype=\"dashed\",\n             color=\"grey60\",\n             size=1) + \n  geom_vline(xintercept=50, \n             linetype=\"dashed\",\n             color=\"grey60\",\n             size=1)"
  }
]