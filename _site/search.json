[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Ex1: Programming Elegant DataViz",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages have been installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)\n\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#bar-chart",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#bar-chart",
    "title": "Hands-on Ex1: Programming Elegant DataViz",
    "section": "Bar Chart",
    "text": "Bar Chart\n\nggplot(data = exam_data,\n       aes(x = RACE)) +\n  geom_bar()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#dotplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#dotplot",
    "title": "Hands-on Ex1: Programming Elegant DataViz",
    "section": "Dotplot",
    "text": "Dotplot\n\nggplot(data = exam_data,\n       aes(x = MATHS)) +\n  geom_dotplot(binwidth = 2.5,\n               dotsize = 0.5) +\n  scale_y_continuous(NULL, \n                     breaks = NULL)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#histogram",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#histogram",
    "title": "Hands-on Ex1: Programming Elegant DataViz",
    "section": "Histogram",
    "text": "Histogram\n\nggplot(data = exam_data,\n       aes(x = MATHS)) +\n  geom_histogram(bins = 20,\n                 color = \"black\",\n                 fill = \"pink\")\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS,\n           fill = GENDER)) +\n  geom_histogram(bins = 20,\n                 color = \"black\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#kernel-density-estimate",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#kernel-density-estimate",
    "title": "Hands-on Ex1: Programming Elegant DataViz",
    "section": "Kernel Density Estimate",
    "text": "Kernel Density Estimate\n\nggplot(data = exam_data,\n       aes(x = MATHS)) +\n  geom_density()\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS, \n           colour = GENDER)) +\n  geom_density()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#boxplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#boxplot",
    "title": "Hands-on Ex1: Programming Elegant DataViz",
    "section": "Boxplot",
    "text": "Boxplot\n\nggplot(data = exam_data,\n       aes(y = MATHS, \n           x = GENDER)) +\n  geom_boxplot()\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, \n           x = GENDER)) +\n  geom_boxplot(notch = TRUE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#boxplot-point",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#boxplot-point",
    "title": "Hands-on Ex1: Programming Elegant DataViz",
    "section": "Boxplot + Point",
    "text": "Boxplot + Point\n\nggplot(data = exam_data,\n       aes(y = MATHS, \n           x = GENDER)) +\n  geom_boxplot() +\n  geom_point(position = \"jitter\",\n             size = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#violin",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#violin",
    "title": "Hands-on Ex1: Programming Elegant DataViz",
    "section": "Violin",
    "text": "Violin\n\nggplot(data = exam_data,\n       aes(y = MATHS, \n           x = GENDER)) +\n  geom_violin()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#violin-boxplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#violin-boxplot",
    "title": "Hands-on Ex1: Programming Elegant DataViz",
    "section": "Violin + Boxplot",
    "text": "Violin + Boxplot\n\nggplot(data = exam_data,\n       aes(y = MATHS, \n           x = GENDER)) +\n  geom_violin(fill = \"light yellow\") +\n  geom_boxplot(alpha = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#scatter-plot-point",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#scatter-plot-point",
    "title": "Hands-on Ex1: Programming Elegant DataViz",
    "section": "Scatter Plot (Point)",
    "text": "Scatter Plot (Point)\n\nggplot(data = exam_data,\n       aes(y = MATHS, \n           x = ENGLISH)) +\n  geom_point()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#best-fit-curve",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#best-fit-curve",
    "title": "Hands-on Ex1: Programming Elegant DataViz",
    "section": "Best Fit Curve",
    "text": "Best Fit Curve\n\nggplot(data = exam_data,\n       aes(y = MATHS, \n           x = ENGLISH)) +\n  geom_point() +\n  geom_smooth(size = 0.5)\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#best-fit-line",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#best-fit-line",
    "title": "Hands-on Ex1: Programming Elegant DataViz",
    "section": "Best Fit Line",
    "text": "Best Fit Line\n\nggplot(data = exam_data,\n       aes(y = MATHS, \n           x = ENGLISH)) +\n  geom_point() +\n  geom_smooth(method = lm, size = 0.5)\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#trellis-plot-facet",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#trellis-plot-facet",
    "title": "Hands-on Ex1: Programming Elegant DataViz",
    "section": "Trellis Plot (Facet)",
    "text": "Trellis Plot (Facet)\n\nggplot(data = exam_data, \n       aes(x = MATHS)) +\n  geom_histogram(bins = 20) +\n    facet_wrap(~ CLASS)\n\n\n\n\n\nggplot(data = exam_data, \n       aes(x = MATHS)) +\n  geom_histogram(bins = 20) +\n    facet_grid(~ CLASS)\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS,\n           x = CLASS)) +\n  geom_boxplot() +\n  facet_grid(~ GENDER)\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS,\n           x = CLASS)) +\n  geom_boxplot() +\n  facet_grid(GENDER ~.)\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS,\n           x = GENDER)) +\n  geom_boxplot() +\n  facet_grid(GENDER ~ CLASS)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-coordinates",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-coordinates",
    "title": "Hands-on Ex1: Programming Elegant DataViz",
    "section": "Working with Coordinates",
    "text": "Working with Coordinates\n\nggplot(data = exam_data, \n       aes(x = RACE)) +\n  geom_bar() +\n  coord_flip()\n\n\n\n\nAligning x-axis and y-axis ranges:\n\nggplot(data = exam_data,\n       aes(x = MATHS, y = ENGLISH)) +\n  geom_point() +\n  geom_smooth(method = lm,\n              size = 0.5) +\n  coord_cartesian(xlim = c(0,100),\n                  ylim = c(0,100))\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-themes",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-themes",
    "title": "Hands-on Ex1: Programming Elegant DataViz",
    "section": "Working with Themes",
    "text": "Working with Themes\nA list of themes can be found at this link\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_gray()\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_classic()\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_minimal()\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_gray() +\n  theme(panel.background = element_rect(\n    fill = \"light blue\",\n    colour = \"light blue\",\n    linewidth = 0.5,\n    linetype = \"solid\"),\n    panel.grid.major = element_line(\n      linewidth = 0.5,\n      linetype = \"solid\",\n      colour = \"white\"),\n    panel.grid.minor = element_line(\n      linewidth = 0.25,\n      linetype = \"solid\",\n      colour = \"white\"))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#makeover-1",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#makeover-1",
    "title": "Hands-on Ex1: Programming Elegant DataViz",
    "section": "Makeover 1",
    "text": "Makeover 1\n\n\n\n\n\nIssues with the bar chart:\n\ny-axis (count) is not clear\nthe bars should be sorted by frequency\nfrequency values should be indicated for clarity\n\n\nggplot(data=exam_data,\n       aes(x=reorder(RACE,RACE,\n                function(x)-length(x))))+\n  geom_bar() +\n  ylim(0,220) +\n  geom_text(stat=\"count\", \n      aes(label=paste0(after_stat(count), \", \", \n      round(after_stat(count)/sum(after_stat(count))*100,\n            1), \"%\")),\n      vjust=-1) +\n  xlab(\"Race\") +\n  ylab(\"No. of\\nPupils\") +\n  theme(axis.title.y=element_text(angle = 0))\n\n\n\n\n\nexam_data %>%\n  mutate(RACE = fct_infreq(RACE)) %>%\n  ggplot(aes(x = RACE)) + \n  geom_bar()+\n  ylim(0,220) +\n  geom_text(stat=\"count\", \n      aes(label=paste0(after_stat(count), \", \", \n      round(after_stat(count)/sum(after_stat(count))*100,\n            1), \"%\")),\n      vjust=-1) +\n  xlab(\"Race\") +\n  ylab(\"No. of\\nPupils\") +\n  theme(axis.title.y=element_text(angle = 0))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#makeover-2",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#makeover-2",
    "title": "Hands-on Ex1: Programming Elegant DataViz",
    "section": "Makeover 2",
    "text": "Makeover 2\n\n\n\n\n\nIssues with the histogram:\n\nbins are not clear\nadd mean and median lines\n\n\nggplot(data = exam_data,\n       aes(x = MATHS)) +\n  geom_histogram(bins = 20,\n                 colour = \"black\",\n                 fill = \"light yellow\") +\n  geom_vline(aes(xintercept = mean(MATHS, na.rm = T)),\n             colour = \"red\",\n             linetype = \"dashed\",\n             size = 1) +\n  geom_vline(aes(xintercept = median(MATHS, na.rm = T)),\n             colour = \"purple\",\n             linetype = \"dashed\",\n             size = 1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#makeover-3",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#makeover-3",
    "title": "Hands-on Ex1: Programming Elegant DataViz",
    "section": "Makeover 3",
    "text": "Makeover 3\nCreating a background histogram for total distribution within a facet wrap for two categories\n\nd <- exam_data   \nd_bg <- d[, -3]  \n\nggplot(d, aes(x = ENGLISH, fill = GENDER)) +\n  geom_histogram(data = d_bg, bins = 20, fill = \"grey\", alpha = .5) +\n  geom_histogram(bins =20, colour = \"black\") +\n  facet_wrap(~ GENDER) +\n  guides(fill = \"none\") +  \n  theme_bw()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#makeover-4",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#makeover-4",
    "title": "Hands-on Ex1: Programming Elegant DataViz",
    "section": "Makeover 4",
    "text": "Makeover 4\nCreate intercept grids and aligning x-axis and y-axis for a scatterplot\n\nggplot(data=exam_data, \n       aes(x=MATHS, y=ENGLISH)) +\n  geom_point() +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  geom_hline(yintercept=50,\n             linetype=\"dashed\",\n             color=\"grey60\",\n             size=1) + \n  geom_vline(xintercept=50, \n             linetype=\"dashed\",\n             color=\"grey60\",\n             size=1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "test"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html",
    "title": "Hands-on Ex7: Visualising Geospatial Point Data",
    "section": "",
    "text": "pacman::p_load(sf, tmap, tidyverse)\nsgpools <- read_csv(\"data/aspatial/SGPools_svy21.csv\")\n\n\nsgpools_sf <- st_as_sf(sgpools, \n                       coords = c(\"XCOORD\", \"YCOORD\"), \n                       crs = 3414)\n\n\ntmap_mode(\"view\")\ntm_shape(sgpools_sf)+\ntm_bubbles(col = \"red\",\n           size = 1,\n           border.col = \"black\",\n           border.lwd = 1)\n\n\n\n\n\ntmap_mode(\"plot\")\n\n\ntmap_mode(\"view\")\ntm_shape(sgpools_sf) +\n  tm_bubbles(col = \"OUTLET TYPE\", \n          size = \"Gp1Gp2 Winnings\",\n          border.col = \"black\",\n          border.lwd = 1) +\n  tm_facets(by= \"OUTLET TYPE\",\n            nrow = 1,\n            sync = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\ntmap_mode(\"plot\")\n\n\nmpsz <- st_read(dsn = \"data/geospatial\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\willielau\\ISSS608-VAA\\Hands-on_Ex\\Hands-on_Ex07\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\npopdata <- read_csv(\"data/aspatial/respopagesextod2011to2020.csv\")\n\n\npopdata2020 <- popdata %>%\n  filter(Time == 2020) %>%\n  group_by(PA, SZ, AG) %>%\n  summarise(`POP` = sum(`Pop`)) %>%\n  ungroup()%>%\n  pivot_wider(names_from=AG, \n              values_from=POP) %>%\n  mutate(YOUNG = rowSums(.[3:6])\n         +rowSums(.[12])) %>%\nmutate(`ECONOMY ACTIVE` = rowSums(.[7:11])+\nrowSums(.[13:15]))%>%\nmutate(`AGED`=rowSums(.[16:21])) %>%\nmutate(`TOTAL`=rowSums(.[3:21])) %>%  \nmutate(`DEPENDENCY` = (`YOUNG` + `AGED`)\n/`ECONOMY ACTIVE`) %>%\n  select(`PA`, `SZ`, `YOUNG`, \n       `ECONOMY ACTIVE`, `AGED`, \n       `TOTAL`, `DEPENDENCY`)\n\n\npopdata2020 <- popdata2020 %>%\n  mutate_at(.vars = vars(PA, SZ), \n          .funs = funs(toupper)) %>%\n  filter(`ECONOMY ACTIVE` > 0)\n\n\nmpsz_pop2020 <- left_join(mpsz, popdata2020,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03.html",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03.html",
    "title": "In-class Ex3: Interactive Data Visualization",
    "section": "",
    "text": "Installing and loading R packages\n\npacman::p_load(ggiraph, tidyverse)\n\nImporting data\n\nexam_data <- read.csv(\"data/Exam_data.csv\")\n\n\nggplot(data=exam_data,\n       aes(x = MATHS)) +\n  geom_dotplot(dotsize = 0.5)\n\n\n\n\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "title": "In-class Ex4: Interactivity & Statistical Analysis",
    "section": "",
    "text": "Loading packages and data\n\npacman::p_load(plotly, DT, patchwork, tidyverse, ggstatsplot, readxl, performance, parameters, see)\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE)\n\n\n\n\n\n\np <- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(dotsize = 1) +\n  coord_cartesian(xlim = c(0,100),\n                  ylim = c(0,100))\nggplotly(p)\n\n\n\n\n\n\nggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(dotsize = 1) +\n  coord_cartesian(xlim = c(0,100),\n                  ylim = c(0,100))\n\n\n\n\n\nggbetweenstats(\n  data = exam_data,\n  x = GENDER, \n  y = MATHS,\n  type = \"p\",\n  messages = FALSE\n)\n\n\n\n\n\nggscatterstats(\n  data = exam_data,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = TRUE,\n  )\n\n\n\n\n\ncar_resale <- read_xls(\"data/ToyotaCorolla.xls\", \"data\")\n\n\nmodel <- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = car_resale)\nmodel\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01  \n\n\n\ncheck_c <- check_collinearity(model)\nplot(check_c)\n\n\n\n\n\ncheck_n <- check_normality(model)\nplot(check_n)\n\n\n\n\n\nmy_sum <- exam_data %>%\n  group_by(RACE) %>%\n  summarise(\n    n = n(),\n    mean = mean(MATHS),\n    sd = sd(MATHS)\n    ) %>%\n  mutate(se = sd / sqrt(n-1))\nknitr::kable(head(my_sum), format = 'html')\n\n\n\n \n  \n    RACE \n    n \n    mean \n    sd \n    se \n  \n \n\n  \n    Chinese \n    193 \n    76.50777 \n    15.69040 \n    1.132357 \n  \n  \n    Indian \n    12 \n    60.66667 \n    23.35237 \n    7.041005 \n  \n  \n    Malay \n    108 \n    57.44444 \n    21.13478 \n    2.043177 \n  \n  \n    Others \n    9 \n    69.66667 \n    10.72381 \n    3.791438 \n  \n\n\n\n\n\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x = RACE, \n        ymin = mean-se, \n        ymax = mean+se), \n    width = 0.2, \n    colour = \"black\", \n    alpha = 0.9, \n    size = 0.5) +\n  geom_point(aes\n           (x = RACE, \n            y = mean), \n           stat = \"identity\", \n           color = \"red\",\n           size = 1.5,\n           alpha = 1) +\n  ggtitle(\"Standard error of mean \n          maths score by rac\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05a.html",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05a.html",
    "title": "In-class Ex5a: Ternary Plots",
    "section": "",
    "text": "Installing and launching R packages, and loading data\n\npacman::p_load(ggtern, plotly, tidyverse)\npop_data <- read_csv(\"data/respopagsex2000to2018_tidy.csv\") \n\nPreparing the data using pivot_wider() and mutate() functions from dplyr package\n\nagpop_mutated <- pop_data %>%\n  mutate(`Year` = as.character(Year))%>%\n  spread(AG, Population) %>%\n  mutate(YOUNG = rowSums(.[4:8]))%>%\n  mutate(ACTIVE = rowSums(.[9:16]))  %>%\n  mutate(OLD = rowSums(.[17:21])) %>%\n  mutate(TOTAL = rowSums(.[22:24])) %>%\n  filter(Year == 2018)%>%\n  filter(TOTAL > 0)\n\nNote: spread() function is obsolete and should use pivot_wider() instead.\nPlotting a static ternary diagram using ggtern() function from ggtern package\n\nggtern(data=agpop_mutated,aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point()\n\n\n\n\n\nggtern(data=agpop_mutated, aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point() +\n  labs(title=\"Population structure, 2015\") +\n  theme_rgbw()\n\n\n\n\nPlotting an interactive ternary diagram using plot_ly() function from Plotly package\n\nlabel <- function(txt) {\n  list(\n    text = txt, \n    x = 0.1, y = 1,\n    ax = 0, ay = 0,\n    xref = \"paper\", yref = \"paper\", \n    align = \"center\",\n    font = list(family = \"serif\", size = 15, color = \"white\"),\n    bgcolor = \"#b3b3b3\", bordercolor = \"black\", borderwidth = 2\n  )\n}\n\naxis <- function(txt) {\n  list(\n    title = txt, tickformat = \".0%\", tickfont = list(size = 10)\n  )\n}\n\nternaryAxes <- list(\n  aaxis = axis(\"Young\"), \n  baxis = axis(\"Active\"), \n  caxis = axis(\"Old\")\n)\n\nplot_ly(\n  agpop_mutated, \n  a = ~YOUNG, \n  b = ~ACTIVE, \n  c = ~OLD, \n  color = I(\"black\"), \n  type = \"scatterternary\"\n) %>%\n  layout(\n    annotations = label(\"Ternary Markers\"), \n    ternary = ternaryAxes\n  )"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05b.html",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05b.html",
    "title": "In-class Ex5b: Correlation Matrix",
    "section": "",
    "text": "Installing and launching R packages, and loading data\n\npacman::p_load(corrplot, ggstatsplot, tidyverse)\nwine <- read_csv(\"data/wine_quality.csv\")\n\nBuilding a basic correlation matrix using pairs() function\n\npairs(wine[,1:11])\n\n\n\n\nTo show the lower half or upper half of the correlation matrix\n\npairs(wine[,2:12], upper.panel = NULL)\n\n\n\n\n\npairs(wine[,2:12], lower.panel = NULL)\n\n\n\n\nTo include correlation coefficient of each pair of variables instead of a scatter plot using panel.cor() function. This will also show higher values in larger font.\n\npanel.cor <- function(x, y, digits=2, prefix=\"\", cex.cor, ...) {\nusr <- par(\"usr\")\non.exit(par(usr))\npar(usr = c(0, 1, 0, 1))\nr <- abs(cor(x, y, use=\"complete.obs\"))\ntxt <- format(c(r, 0.123456789), digits=digits)[1]\ntxt <- paste(prefix, txt, sep=\"\")\nif(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)\ntext(0.5, 0.5, txt, cex = cex.cor * (1 + r) / 2)\n}\n\npairs(wine[,2:12], \n      upper.panel = panel.cor)\n\n\n\n\nBuilding correlation matrix using ggcormat() from ggstatsplot package which has better visuals. However there is some conflict with ggtern package.\n\nggstatsplot::ggcorrmat(data = wine,\n                       cor.vars = 1:11)\n\n\n\n\n\nggstatsplot::ggcorrmat(\n  data = wine, \n  cor.vars = 1:11,\n  ggcorrplot.args = list(outline.color = \"black\", \n                         hc.order = TRUE,\n                         tl.cex = 10),\n  title    = \"Correlogram for wine dataset\",\n  subtitle = \"Four pairs are no significant at p < 0.05\"\n)\n\n\n\n\nBuilding multiple plots with facets using grouped_ggcorrmat() function from ggstatsplot package\n\ngrouped_ggcorrmat(\n  data = wine,\n  cor.vars = 1:11,\n  grouping.var = type,\n  type = \"robust\",\n  p.adjust.method = \"holm\",\n  plotgrid.args = list(ncol = 2),\n  ggcorrplot.args = list(outline.color = \"black\", \n                         hc.order = TRUE,\n                         tl.cex = 10),\n  annotation.args = list(\n    tag_levels = \"a\",\n    title = \"Correlogram for wine dataset\",\n    subtitle = \"The measures are: alcohol, sulphates, fixed acidity, citric acid, chlorides, residual sugar, density, free sulfur dioxide and volatile acidity\",\n    caption = \"Dataset: UCI Machine Learning Repository\"\n  )\n)\n\n\n\n\nBuilding corrgram using corrplot(), we need to first compute the correlation matrix of the wine data frame before plotting the corrgram\n\nwine.cor <- cor(wine[, 1:11])\ncorrplot(wine.cor)\n\n\n\n\nThere are seven visual geometrics (parameter method) - circle, square, ellipse, number, shade, color and pie - that can be used to encode the attribute values. The default circle can be changed by using the method argument.\n\ncorrplot(wine.cor, \n         method = \"shade\") \n\n\n\n\nCorrplot() supports 3 layout types - full, upper, or lower which can be changed using the type argument\n\ncorrplot(wine.cor, \n         method = \"shade\", \n         type=\"lower\")\n\n\n\n\nFurther customization can be done using diag and tl.col arguments to turn off the diagonal cells and to change the axis text colour.\n\ncorrplot(wine.cor, \n         method = \"shade\", \n         type=\"lower\",\n         diag = FALSE,\n         tl.col = \"black\")\n\n\n\n\nIt is possible to design corrgram with mixed visual matrix using corrplot.mixed() and also using tl.pos to specify the placement of the axis label.\n\ncorrplot.mixed(wine.cor, \n               lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\")\n\n\n\n\nIn statistical analysis, we are also interested to know which pair of variables their correlation coefficients are statistically significant. We can use the cor.mtest() to compute the p-values and confidence interval for each pair of variables, followed by using p.mat argument of corrplot().\n\nwine.sig = cor.mtest(wine.cor, conf.level= .95)\ncorrplot(wine.cor,\n         method = \"number\",\n         type = \"lower\",\n         diag = FALSE,\n         tl.col = \"black\",\n         tl.srt = 45,\n         p.mat = wine.sig$p,\n         sig.level = .05)\n\n\n\n\nCorrplot package supports 4 sorting methods with more methods found in the seriation package:\n\n\"AOE\" is for the angular order of the eigenvectors. See Michael Friendly (2002) for details.\n\"FPC\" for the first principal component order.\n\"hclust\" for hierarchical clustering order, and \"hclust.method\" for the agglomeration method to be used. \"hclust.method\" should be one of \"ward\", \"single\", \"complete\", \"average\", \"mcquitty\", \"median\" or \"centroid\".\n\"alphabet\" for alphabetical order.\n\n\ncorrplot.mixed(wine.cor, \n               lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               order=\"AOE\",\n               tl.col = \"black\")\n\n\n\n\n\ncorrplot(wine.cor, \n         method = \"ellipse\", \n         tl.pos = \"lt\",\n         tl.col = \"black\",\n         order=\"hclust\",\n         hclust.method = \"ward.D\",\n         addrect = 3)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05c.html",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05c.html",
    "title": "In-class Ex5c: Heat Maps",
    "section": "",
    "text": "Installing and launching R packages, and loading data\n\npacman::p_load(seriation, dendextend, heatmaply, tidyverse)\nwh <- read_csv(\"data/WHData-2018.csv\") \n\n\n\nPreparing the data using by changing the rows by country name instead of row number\n\nrow.names(wh) <- wh$Country\n\nTransforming the data frame into a matrix to be able to create heat maps\n\nwh1 <- dplyr::select(wh, c(3, 7:12))\nwh_matrix <- data.matrix(wh)\n\nPlot default cluster heatmap using heatmap() of base R Stats package\n\nwh_heatmap <- heatmap(wh_matrix)\n\n\n\n\nUse the arguments Rowv=NA and Colv=NA to switch off the option of plotting the row and column dendrograms.\n\nwh_heatmap <- heatmap(wh_matrix,\n                      Rowv=NA, Colv=NA)\n\n\n\n\nTo normalize the matrix using scale argument for a more informative visual. Also note that margins argument is used to ensure that the entire x-axis labels are displayed completely and, cexRow and cexCol arguments are used to define the font size used for y-axis and x-axis labels respectively.\n\nwh_heatmap <- heatmap(wh_matrix,\n                      scale=\"column\",\n                      cexRow = 0.6, \n                      cexCol = 0.8,\n                      margins = c(10, 4))\n\n\n\n\n\n\n\nUsing heatmaply package\n\nheatmaply(wh_matrix[, -c(1, 2, 4, 5)])\n\n\n\n\n\nScaling method when assume to be normal distribution\n\nheatmaply(wh_matrix[, -c(1, 2, 4, 5)],\n          scale = \"column\")\n\n\n\n\n\nNormalization method when assume to be different or non-normal distributions so that it is easily comparable on the same scale\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]))\n\n\n\n\n\nPercentizing method\n\nheatmaply(percentize(wh_matrix[, -c(1, 2, 4, 5)]))\n\n\n\n\n\nOLO - optimal leaf ordering, GW - Gruvaeus and Wainer\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"OLO\")\n\n\n\n\n\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"GW\")\n\n\n\n\n\nOther plotting features to ensure cartographic quality heatmap can be produced\n\ncolors is used to change the colour palette\nk_row is used to produce 5 groups.\nmargins is used to change the top margin to 60 and row margin to 200.\nfontsizw_row and fontsize_col are used to change the font size for row and column labels\nmain is used to write the main title of the plot.\nxlab and ylab are used to write the x-axis and y-axis labels respectively.\n\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          Colv=NA,\n          seriate = \"none\",\n          colors = Blues,\n          k_row = 5,\n          margins = c(NA,200,60,NA),\n          fontsize_row = 4,\n          fontsize_col = 5,\n          main=\"World Happiness Score and Variables by Country, 2018 \\nDataTransformation using Normalise Method\",\n          xlab = \"World Happiness Indicators\",\n          ylab = \"World Countries\"\n          )"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608 Visual Analytics & Applications",
    "section": "",
    "text": "Welcome to my website for ISSS608 Visual Analytics & Applications (Jan 2023 term). This is part of my coursework for the Masters of IT in Business (Analytics Track) at Singapore Management University."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "Between January 2020 to June 2022, there were 73,247 real estate transactions in Singapore across all property types. It would be interesting to explore population demographics of the top 9 planning areas by volume of real estate transactions.\nThe population demographic data used is “Singapore Residents by Planning Area / Subzone, Age Group, Sex and Type of Dwelling, June 2022” from the Department of Statistics, Singapore.\nThe age-sex pyramid in a trellis display is used to show the demographic structure by gender and age group for each of these top 9 planning areas.\n\nSource: REALIS, URA Singapore"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#age-sex-pyramid-visualization",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#age-sex-pyramid-visualization",
    "title": "Take-home Exercise 1",
    "section": "2. Age-Sex Pyramid Visualization",
    "text": "2. Age-Sex Pyramid Visualization\nThe proposed age-sex pyramid in a trellis display visualization for the 9 planning areas by gender and age group is available for viewing on Tableau Public.\n\n\n2.1 Negative Population Growth Rate\nThe age-sex pyramid of all 9 planning areas point towards a negative population growth rate where the large age groups the middle outstrip the younger ones. The adults in these middle age groups will soon become seniors with higher dependency on younger family members for living cost burdens even as general living costs are on the rise. This is consistent with the general discourse on Singapore’s aging population problem where the state is also concerned that the burden extends to state funding as well. More resources and facilities in areas such as health care will need to be provided by the government to support the rising number of seniors.\nThis negative growth rate is to a certain extent less prevalent in planning areas such as Bukit Timah, Clementi, and Queenstown where housing prices tend to be higher than the others. This is quite surprising as these are some of the most mature estates in Singapore and would have expected to see a more distinct inverted triangle shape. One possible explanation is that since these areas are home to more affluent families, especially in Bukit Timah, they have the financial muscle to have more children with less concerns about the cost of doing so.\n\n\n2.2 Other Interesting Stray Observations\n\nA hypothesis can be made that females live longer than males as there seems to be more females in the higher age groups in every planning area. This trend starts around the 80-84 age group and becomes most distinct in the 90+ group.\nBelow the 80-84 age group, the ratio of males to females appear to be quite equally split. Furthermore, the largest age groups also appear to be fairly consistent between the number of males and females\nBukit Timah has the smallest total population size but interestingly topped the list at 5,390 transactions between January 2021 and June 2022.\nPasir Ris land area is comparable to Sengkang and Hougang but much less densely populated."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#step-by-step-guide",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#step-by-step-guide",
    "title": "Take-home Exercise 1",
    "section": "3. Step-by-Step Guide",
    "text": "3. Step-by-Step Guide\n\n3.1 Data Cleaning with Tableau Prep Builder\n\n\n\n\n\n\n\n\n3.1.1\nLoad the csv file\n\n\n\n3.1.2\nRename column headers into more recognizable names\n\n\n\n3.1.3\nModify “Age Group” so that it can be sorted in descending order\n\n\n\n3.1.4\nOutput clean data as .hyper data extract for use in Tableau Desktop\n\n\n\n\n\n\n3.2 Data Visualization with Tableau Desktop\n\n\n\n\n\n\n\n\n3.2.1\nCreate calculated field for male and female population\n\n\n\n3.2.2\nAdd “Planning Area”, “Male Population”, “Female Population” to columns\nAdd “Age Group” to rows\nAdd “Sex” to Colour and select desired colour\n\n\n\n3.2.3\nFilter the 9 selected planning areas\n\n\n\n3.2.4\nReverse y-axis to get descending order for age group, reverse x-axis for male population to get the pyramid shape and standardize the range to ensure bar lengths are comparable\n\n\n\n3.2.5\nMake cosmetic changes to headers, axis, text, legend, etc. for cleaner and better look. Prepare dashboard for publishing to Tableau Public."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "title": "Take-home Exercise 2",
    "section": "",
    "text": "This Take-home Exercise 2 is a critique of a classmate’s Take-home Exercise 1 in terms of clarity and aesthetics.\nThe task for Take-home Exercise 1 is to produce age-sex pyramids in a trellis display to reveal the age group and gender demographic structures of 9 planning areas in Singapore using the “Singapore Residents by Planning Area, Subzone, Age Group, Sex, and Type of Dwelling, June 2022” dataset from the Department of Statistics, Singapore.\nThe original design was created using Tableau but will now be redone in R Studio, using data visualization principles and best practices learnt so far in the course."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#critique-of-original-design",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#critique-of-original-design",
    "title": "Take-home Exercise 2",
    "section": "2. Critique of Original Design",
    "text": "2. Critique of Original Design\n\n2.1 Original Design\n\n\n\n2.2 Clarity\nX-Axis Range\nWhen comparing across visual charts, especially ones like age-sex pyramids, people take first impressions base on sweeping visual cues such as comparing the shapes of the pyramid, length of the bars, etc. without looking too much into the details. When the x-axis range is inconsistent like in this case, it will immediately give the wrong interpretations. For example, Ang Mo Kio and Jurong West appears to be similarly shaped and one would interpret that they largely have the same population size. However this is a false interpretation because Ang Mo Kio’s x-axis is scaled to 6,000 while Jurong West is scaled to 10,000.\nThe x-axis is not just inconsistent between the different planning areas but also different within some of the same planning area. For example, Novena has inconsistent range values and also intervals.\nY-Axis Label\nWhile it is quite intuitive to guess that the numbers on the y-axis represents ages since this is called an age-sex pyramid, it would still be good to label it.\nChoice of Planning Area\nThe task required choosing 9 planning areas to visualize but there does not seem to be any rationale or logic for the choices made here.\n\n\n2.3 Aesthetics\nDuplicate Displays\nIt is quite confusing to have duplicate displays of the age-sex pyramids - one in a single row and the other in a 3x3 grid - as people will assume there is a difference. The purpose of this is unclear but it appears from the chart titles (which are also confusing) that the 3x3 grid is supposed to be more detailed than the single row. However it does not really show more detail so since they are exactly the same except they are more spaced out. The single row display is unnecessary.\nThe one positive of the single row display is that at least the x-axis ranges appear to be consistent across all the pyramids."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#new-design",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#new-design",
    "title": "Take-home Exercise 2",
    "section": "3. New Design",
    "text": "3. New Design\n\n3.1 Data Preparation\nInstalling (if required) and launching necessary R packages:\n\npackages = c('tidyverse')\n\nfor(p in packages){\n  if(!require(p, character.only = T)){\n    install.packages(p)\n  }\n  library(p, character.only = T)\n}\n\nLoading the data:\n\npopdata <- read_csv(\"data/respopagesextod2022.csv\")\n\nRemoving null values:\n\npopdata <- na.omit(popdata)\n\nReformatting Age Group:\n\nagegrp = c(\"0_to_4\", \"5_to_9\", \"10_to_14\", \"15_to_19\", \n           \"20_to_24\", \"25_to_29\", \"30_to_34\", \"35_to_39\", \n           \"40_to_44\", \"45_to_49\", \"50_to_54\", \"55_to_59\",\n           \"60_to_64\", \"65_to_69\", \"70_to_74\", \"75_to_79\", \n           \"80_to_84\", \"85_to_89\", \"90_and_over\")\n\nfor (a in agegrp){\n  popdata$AG[popdata$AG == a] <- c(\"0-04\", \"05-09\", \"10-14\", \"15-19\",\n                             \"20-24\", \"25-29\", \"30-34\", \"35-39\",\n                             \"40-44\", \"45-49\", \"50-54\", \"55-59\",\n                             \"60-64\", \"65-69\", \"70-74\", \"75-79\",\n                             \"80-84\", \"85-89\", \"90+\")\n  }\n\nChoosing the Top 9 Planning Areas by total size:\n\ntop9 <- popdata %>%\n  group_by(PA) %>%\n  summarise_at(vars(Pop), sum) %>%\n  arrange(desc(Pop))\n\ntop9 <- (top9[1:9,1])\n\ntop9\n\n# A tibble: 9 × 1\n  PA           \n  <chr>        \n1 Bedok        \n2 Tampines     \n3 Jurong West  \n4 Sengkang     \n5 Woodlands    \n6 Hougang      \n7 Yishun       \n8 Choa Chu Kang\n9 Punggol      \n\n\n\nfor (x in top9){\n  top9data <- subset(popdata, PA == x)}\n\nCreating the male and female population dataframes from the Top 9 Planning Areas:\n\nMtop9data <- filter(top9data, Sex == 'Males')\nFtop9data <- filter(top9data, Sex == 'Females') %>% \n  mutate(Pop = Pop*-1)\n\n\n\n3.2 Final Design\n\nggplot() +\n  geom_bar(Mtop9data, mapping = aes(x = AG, y = sum(Pop), fill = Sex), width = 0.8, stat = \"identity\") +\n  geom_bar(Ftop9data, mapping = aes(x = AG, y = sum(Pop), fill = Sex), width = 0.8, stat = \"identity\") +\n  coord_flip() +\n  facet_wrap (~ PA) + \n  ylab(\"Population\") +\n  xlab(\"Age Group\") +\n  theme(axis.text.y=element_text(size=rel(0.4))) +\n  ggtitle(\"Age-Sex Pyramid of Top 9 Planning Areas by Population, SG June 2022\")\n\n\n\n\nThere is unfortunately some error with the values for population count in the final design resulting in an age-sex pyramid that is clearly wrong. However, I cannot figure out where is the problem.\nLeaving aside the errors, this visualization provides greater clarity and aesthetics as compared to the original design."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html",
    "title": "Take-home Ex3: Visual Statistical Analysis of Resale Flats in 2022",
    "section": "",
    "text": "The task is to uncover salient patterns of the resale prices of public housing in Singapore by using appropriate statistical analysis visualization techniques. For the purpose of this exercise, the focus is on 3/4/5-room flats in 2022."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#selection-design-considerations",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#selection-design-considerations",
    "title": "Take-home Ex3: Visual Statistical Analysis of Resale Flats in 2022",
    "section": "2. Selection & Design Considerations",
    "text": "2. Selection & Design Considerations\nAs a subset of the focus area, we will dive deeper into the relationship between resale prices and flat sizes between the 3 flat types. The general rule of thumb for property prices is that there is an inverse correlation between prices and size, i.e. the larger property will have a lower per sqm price. We will be transforming the resale prices to its per sqm equivalent and see if there is any significant statistical difference to the mean prices per sqm across 3/4/5-room flat types.\nTo achieve this, we will be using ANOVA to test the null hypothesis that the price per sqm means are the same across the 3 flat types. ANOVA is chosen because the data has more than two categorical sample groups and one numerical variable. We will also have to check for normality because ANOVA assumes that the data is normally distributed."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#detailed-steps",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#detailed-steps",
    "title": "Take-home Ex3: Visual Statistical Analysis of Resale Flats in 2022",
    "section": "3. Detailed Steps",
    "text": "3. Detailed Steps\n\n3.1 Installing and launching R packages\n\npacman::p_load(ggstatsplot, plotly, performance, corrplot, tidyverse)\n\n\n\n3.2 Loading the data\n\nresale <- read.csv(\"data/resale.csv\")\n\n\n\n3.3 Filtering the data\nWe filter the data to the required scope of 3/4/5-ROOM types and for the time period of 2022\n\nfilter1 <- c(\"3 ROOM\", \"4 ROOM\", \"5 ROOM\")\nresale2022 <- filter(resale, resale$flat_type %in% filter1)\n\nfilter2 <- c(\"2022-01\", \"2022-02\", \"2022-03\", \"2022-04\", \"2022-05\", \"2022-06\", \"2022-07\", \"2022-08\", \"2022-09\", \"2022-10\", \"2022-11\", \"2022-12\")\nresale2022 <- filter(resale2022, resale2022$month %in% filter2)\n\n\n\n3.4 Calculating the price per sqm\nWe calculate the price per sqm to be able to compare the means across the different flat types\n\nresale2022 <- resale2022 %>% mutate(price_sqm = resale_price / floor_area_sqm)\n\n\n\n3.5 Check distribution of data\nANOVA requires data to be normally distributed\n\nggplot(data = resale2022,\n       aes(x = price_sqm)) +\n  geom_histogram(bins = 50) +\n  facet_wrap(~ flat_type)\n\n\n\n\n\n\n3.6 Additional data transformation\nWe are not able to use ANOVA since the raw data is not normally distributed. Therefore one options is to transform the data to best fit a normal distribution. In this case where the data is severely positively skewed, we will inverse the values, i.e. 1/x.\n\nresale2022 <- resale2022 %>% mutate(adj_ppsm = 1/price_sqm)\n\nggplot(data = resale2022,\n       aes(x = adj_ppsm)) +\n  geom_histogram(bins = 50) +\n  facet_wrap(~ flat_type)\n\n\n\n\n\n\n3.7 ANOVA test\nWith the data now somewhat more closely fitting a normal distribution, we can proceed with using the one-way ANOVA to test the null hypothesis that the price per sqm means are the same across the 3 flat type.\n\nggbetweenstats(\n  data = resale2022,\n  x = flat_type,\n  y = adj_ppsm,\n  type = \"p\",\n  mean.ci = TRUE,\n  pairwise.comparisons = TRUE,\n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#interpretation-of-results",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#interpretation-of-results",
    "title": "Take-home Ex3: Visual Statistical Analysis of Resale Flats in 2022",
    "section": "4. Interpretation of Results",
    "text": "4. Interpretation of Results\nAs the p-value form the one-wau ANOVA test is less than the significance level of 0.05, we can reject the null hypothesis. We can therefore conclude that there is enough statistical evidence to support the statement that there are significant statistical differences between the price per sqm.\nHowever, ANOVA only proves that there are significant statistical difference between the 3 flat types but this is not sufficient to prove that larger floor areas equals to lower price per sqm. Therefore we will need to go further by using Tukey multiple pairwise comparisons to get our answer.\n\nres.aov <- aov(adj_ppsm ~ flat_type, data = resale2022)\nTukeyHSD(res.aov)\n\n  Tukey multiple comparisons of means\n    95% family-wise confidence level\n\nFit: aov(formula = adj_ppsm ~ flat_type, data = resale2022)\n\n$flat_type\n                       diff           lwr          upr     p adj\n4 ROOM-3 ROOM -3.360650e-07 -1.610556e-06 9.384255e-07 0.8102436\n5 ROOM-3 ROOM  5.976589e-06  4.554018e-06 7.399159e-06 0.0000000\n5 ROOM-4 ROOM  6.312654e-06  5.060918e-06 7.564390e-06 0.0000000\n\n\nThe results tell us that:\n\n4-ROOM - 3-ROOM < 0 but not significant\n5-ROOM - 3-ROOM > 0 and significant\n5-ROOM - 4-ROOM > 0 and significant\n\nOnly 4-ROOM flats show a lower price per sqm than 3-ROOM flats but the p-value is higher than the confidence level so this difference is not significant. Therefore the results actually proves that the general rule of thumb that large flats equal to lower price per sqm is actually not statistically accurate.\nThis is actually not surprising as the flat types in this exercise include all the different planning areas in Singapore which can be a huge factor towards determining the flat prices. Other variables such as remaining lease could potentially also play a part in affecting the prices. An better study would be to breakdown the data into smaller groups (same planning area, small range of remaining lease, etc.) and test between multiple groups."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex04/Take-home_Ex04.html",
    "href": "Take-home_Ex/Take-home_Ex04/Take-home_Ex04.html",
    "title": "Take-home Ex4: Singapore Bi-lateral Trade",
    "section": "",
    "text": "The task is to uncover the impact of COVID-19 as well as the global economic and political dynamic in 2022 on Singapore’s bi-lateral trade. For this purpose, the Merchandise Trade data provided by Department of Statistics, Singapore will be used but trimmed down to the period of Jan 2017 to Dec 2022 - i.e. the 3 years prior to COVID-19 and the 3 years of COVID-19."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex04/Take-home_Ex04.html#selection-design-considerations",
    "href": "Take-home_Ex/Take-home_Ex04/Take-home_Ex04.html#selection-design-considerations",
    "title": "Take-home Ex4: Singapore Bi-lateral Trade",
    "section": "2. Selection & Design Considerations",
    "text": "2. Selection & Design Considerations\nThe visualization selected is Trellis plot line chart to examine the difference in trade balances between the pre-COVID years of 2017-2019 and the COVID years of 2020-2022 for the top 10 trade surplus and deficit countries over the 6 year period."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex04/Take-home_Ex04.html#detailed-steps",
    "href": "Take-home_Ex/Take-home_Ex04/Take-home_Ex04.html#detailed-steps",
    "title": "Take-home Ex4: Singapore Bi-lateral Trade",
    "section": "3. Detailed Steps",
    "text": "3. Detailed Steps\nInstalling and launching R Packages\n\npacman::p_load(ggplot2, tidyverse)\n\nLoading the data\n\nimport <- read_csv(\"data/import.csv\")\nexport <- read_csv(\"data/export.csv\")\n\nTidying up the Import data\n\nimport$`Data Series` <- gsub(\"(Thousand Dollars)\", \"\",\n                             as.character(import$`Data Series`))\nimport$`Data Series` <- gsub(\"[[:punct:]]\",\"\", as.character(import$`Data Series`))\nimport <- import %>% filter(!row_number() %in% c(1,2,3,4,5,6,7)) \nimport <- import[,-2] \nimport <- import[,-c(74:565)]\ncolnames(import)[1] <- \"Country\"\nimport <- import %>%\n  pivot_longer(!Country, names_to = \"Date\", values_to = \"Import\") %>% \n  separate(Date, c(\"Year\", \"Month\"))\n\nTidying up the Export data\n\nexport$`Data Series` <- gsub(\"(Thousand Dollars)\", \"\",\n                             as.character(export$`Data Series`))\nexport$`Data Series` <- gsub(\"[[:punct:]]\",\"\", as.character(export$`Data Series`))\nexport <- export %>% filter(!row_number() %in% c(1,2,3,4,5,6,7)) \nexport <- export[,-2] \nexport <- export[,-c(74:565)]\ncolnames(export)[1] <- \"Country\"\nexport <- export %>% \n  pivot_longer(!Country, names_to = \"Date\", values_to = \"Export\") %>% \n  separate(Date, c(\"Year\", \"Month\"))\n\nJoining the two tables and finding the trade balance\n\nimport$joinkey <- paste(import$Country, import$Year, import$Month)\nexport$joinkey <- paste(export$Country, export$Year, export$Month)\ntrade <- import %>% inner_join(export, by = \"joinkey\")\ntrade <- trade[,-c(5:8)]\ncolnames(trade)[1] <- \"Country\"\ncolnames(trade)[2] <- \"Year\"\ncolnames(trade)[3] <- \"Month\"\ntrade$`Trade Balance` <- trade$Export - trade$Import\n\nCreating the pre and post COVID tables\n\ntrade1719 <- trade %>% filter(Year %in% c(\"2017\", \"2018\", \"2019\"))\ntrade2022 <- trade %>% filter(Year %in% c(\"2020\", \"2021\", \"2022\"))\n\nFinding the top 10 trade surplus countries\n\ntoptrade <- trade %>% \n  group_by(Country) %>% \n  summarise(`Trade Balance` = sum(`Trade Balance`))\ntop10surplus <- toptrade %>% \n  arrange(desc(`Trade Balance`)) %>% \n  slice(1:10)\ntop10surplus\n\n# A tibble: 10 × 2\n   Country                          `Trade Balance`\n   <chr>                                      <dbl>\n 1 \"Hong Kong \"                           384308817\n 2 \"Indonesia \"                           112505822\n 3 \"Vietnam Socialist Republic Of \"        79510735\n 4 \"Netherlands \"                          50579168\n 5 \"Thailand \"                             50563348\n 6 \"Australia \"                            48928462\n 7 \"Mainland China \"                       41003643\n 8 \"India \"                                38995846\n 9 \"Belgium \"                              31671372\n10 \"Other Countries In Oceania \"           30755282\n\n\n\ntrade1719_surplus <- trade1719 %>% \n  filter(Country %in% top10surplus$Country) %>% \n  mutate(Date = paste(Year, Month))\ntrade2022_surplus <- trade2022 %>% \n  filter(Country %in% top10surplus$Country) %>% \n  mutate(Date = paste(Year, Month))\n\nFinding the top 10 trade deficit countries\n\ntop10deficit <- toptrade %>% \n  arrange(`Trade Balance`) %>% \n  slice(1:10)\ntop10deficit\n\n# A tibble: 10 × 2\n   Country                 `Trade Balance`\n   <chr>                             <dbl>\n 1 \"Taiwan \"                    -162661624\n 2 \"Saudi Arabia \"               -60874407\n 3 \"France \"                     -59707277\n 4 \"United Arab Emirates \"       -54684947\n 5 \"United States \"              -51292306\n 6 \"Switzerland \"                -47316749\n 7 \"Qatar \"                      -36189700\n 8 \"Malaysia \"                   -34900347\n 9 \"United Kingdom \"             -30368171\n10 \"Italy \"                      -28945315\n\n\n\ntrade1719_deficit <- trade1719 %>% \n  filter(Country %in% top10deficit$Country) %>% \n  mutate(Date = paste(Year, Month))\ntrade2022_deficit <- trade2022 %>% \n  filter(Country %in% top10deficit$Country) %>% \n  mutate(Date = paste(Year, Month))\n\nTop 10 Trade Surplus Countries\n\nggplot() +\n  geom_line(data = trade1719_surplus, aes(x = Date, y = `Trade Balance`/1000,\n                                          group = Country)) +\n  labs(title = \"Top 10 Trade Surplus Countries 2017-2019\", \n       x = \"\", y = \"Trade Balance (in SGD'M)\") +\n  facet_wrap(vars(Country))\n\n\n\n\n\nggplot() +\n  geom_line(data = trade2022_surplus, aes(x = Date, y = `Trade Balance`/1000,\n                                          group = Country)) +\n  labs(title = \"Top 10 Trade Surplus Countries 2020-2022\", \n       x = \"\", y = \"Trade Balance (in SGD'M)\") +\n  facet_wrap(vars(Country))\n\n\n\n\nTop 10 Trade Deficit Countries\n\nggplot() +\n  geom_line(data = trade1719_deficit, aes(x = Date, y = `Trade Balance`/1000,\n                                          group = Country)) +\n  labs(title = \"Top 10 Trade Deficit Countries 2017-2019\", \n       x = \"\", y = \"Trade Balance (in SGD'M)\") +\n  facet_wrap(vars(Country))\n\n\n\n\n\nggplot() +\n  geom_line(data = trade2022_deficit, aes(x = Date, y = `Trade Balance`/1000,\n                                          group = Country)) +\n  labs(title = \"Top 10 Trade Deficit Countries 2020-2022\", \n       x = \"\", y = \"Trade Balance (in SGD'M)\") +\n  facet_wrap(vars(Country))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex04/Take-home_Ex04.html#observations",
    "href": "Take-home_Ex/Take-home_Ex04/Take-home_Ex04.html#observations",
    "title": "Take-home Ex4: Singapore Bi-lateral Trade",
    "section": "4. Observations",
    "text": "4. Observations\nTop 10 Trade Surplus Countries\n\nThe merchandise trade with China fluctuates wildly in the COVID years, not following the trends of the prior years. This is not unexpected given that China enforced extreme restrictions with their zero COVID policy resulting in trade being extremely volatile\nTrade balance with the other countries seem to have not been severely affect by COVID as the trends remain consistent between 2017-2019 and 2020-2022\n\nTop 10 Trade Deficit Countries\n\nTrade deficit seems to have widen with United States during the COVID years\nThe same is observed with Malaysia. Perhaps with other borders closed, Singapore had to rely more heavily on our neighbours for trade."
  }
]